CREATE TABLE USERS
(
USER_ID NUMBER(38) CONSTRAINT USER_ID_NN NOT NULL,
USER_NAME VARCHAR2(255) CONSTRAINT USER_NAME_NN NOT NULL,
USER_PHOTO VARCHAR2(255) CONSTRAINT USER_PHOTO_NN NOT NULL,
USER_FATHER_NAME VARCHAR2(255) CONSTRAINT FATHER_NN NOT NULL,
USER_MOTHER_NAME VARCHAR2(255) CONSTRAINT MOTHER_NN NOT NULL,
USER_GENDER VARCHAR2(255) CONSTRAINT GENDER_NN NOT NULL,
USER_DOB DATE CONSTRAINT USER_DOB_NN NOT NULL,
USER_NID VARCHAR2(255) CONSTRAINT USER_NID_NN NOT NULL,
USER_MOBILE_NO VARCHAR2(255) CONSTRAINT USER_MOBILE_NN NOT NULL,
USER_PASSWORD VARCHAR2(255)CONSTRAINT USER_PASSWORD_NN NOT NULL,

CONSTRAINT CHECK_USER_GENDER CHECK (USER_GENDER IN('male','female')),
CONSTRAINT PK_USER_ID PRIMARY KEY(USER_ID),
CONSTRAINT UNQ_USER_MOBILE_N0 UNIQUE(USER_MOBILE_NO)
);


CREATE TABLE CUSTOMER
(
CUSTOMER_ID NUMBER(38) CONSTRAINT CUSTOMER_ID_NN NOT NULL,
CUSTOMER_BALANCE NUMBER,

CONSTRAINT PK_CUSTOMER_ID PRIMARY KEY (CUSTOMER_ID),
CONSTRAINT FK_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES USERS(USER_ID)
);


CREATE TABLE AGENT
(
AGENT_ID NUMBER(38) CONSTRAINT AGENT_ID_NN NOT NULL,
AGENT_BANK_AC NUMBER(38) CONSTRAINT AGENT_BANK_AC_NN NOT NULL,
AGENT_BALANCE NUMBER,

CONSTRAINT PK_AGENT_ID PRIMARY KEY (AGENT_ID),
CONSTRAINT FK_AGENT_ID FOREIGN KEY (AGENT_ID) REFERENCES USERS(USER_ID)
);


CREATE TABLE OFFERS
(
OFFER_ID NUMBER(38) CONSTRAINT OFFER_ID_NN NOT NULL,
DISCOUNT_PERCENT NUMBER CONSTRAINT DISCOUNT_PR_NN NOT NULL,

CONSTRAINT PK_OFFER_ID PRIMARY KEY (OFFER_ID),
CONSTRAINT CHECK_DISCOUNT_PERCENT CHECK (DISCOUNT_PERCENT BETWEEN 0 AND 100)
);


CREATE TABLE MERCHANTS
(
MERCHANT_ID NUMBER(38) CONSTRAINT MERCHANT_ID_NN NOT NULL,
MERCHANT_BRANCH_ID NUMBER(38) CONSTRAINT MERCHANT_BRANCH_ID_NN NOT NULL,
MERCHANT_NAME VARCHAR2(255) CONSTRAINT MERCHANT_NAME_NN NOT NULL,
MERCHANT_LOGO_IMAGE VARCHAR2(255) CONSTRAINT MERCHANT_LOGO_NN NOT NULL,
MERCHANT_BANK_AC_NO NUMBER(38) CONSTRAINT MERCHANT_BANK_AC_NN NOT NULL,
OFFER_ID NUMBER(38),

CONSTRAINT PK_MERCHANTS PRIMARY KEY (MERCHANT_ID,MERCHANT_BRANCH_ID),
CONSTRAINT FK_OFFER_ID_MERCHANTS FOREIGN KEY (OFFER_ID) REFERENCES OFFERS(OFFER_ID)
);


CREATE TABLE MOBILE_OPERATOR
(
OPERATOR_ID NUMBER(38) CONSTRAINT OPERATOR_ID_NN NOT NULL,
OPERATOR_NAME VARCHAR2(255) CONSTRAINT OPERATOR_NAME_NN NOT NULL,
OPERATOR_BANK_AC_NO NUMBER(38) CONSTRAINT OPERATOR_BANK_AC_NN NOT NULL,

CONSTRAINT PK_MOBILE_OPERATOR PRIMARY KEY(OPERATOR_ID)
);


CREATE TABLE UTILITY_SERVICE
(
SERVICE_ID NUMBER(38) CONSTRAINT SERVICE_ID_NN NOT NULL,
SERVICE_NAME VARCHAR2(255) CONSTRAINT SERVICE_NAME_NN NOT NULL,
SERVICE_BANK_AC_NO NUMBER(38) CONSTRAINT SERVICE_BANK_AC_NN NOT NULL,

CONSTRAINT PK_UTILITY_SERVICE PRIMARY KEY(SERVICE_ID)
);


CREATE TABLE HISTORY_TYPE
(
TYPE_ID NUMBER(38) CONSTRAINT TYPE_ID_NN NOT NULL,
TYPE_NAME VARCHAR2(255) CONSTRAINT TYPE_NAME_NN NOT NULL,

CONSTRAINT PK_HISTORY_TYPE PRIMARY KEY(TYPE_ID)
);


CREATE TABLE HISTORY
(
HISTORY_ID NUMBER(38) CONSTRAINT HISTORY_ID_NN NOT NULL,
TYPE_ID NUMBER(38) CONSTRAINT HISTORY_TYPE_ID_NN NOT NULL,
TRANSACTION_ID NUMBER(38) CONSTRAINT TRANSCATION_ID_NN NOT NULL,
TRANSACTION_TIME DATE CONSTRAINT TRANSCATION_DATE_NN NOT NULL,
TRANSACTION_AMOUNT NUMBER,

CONSTRAINT PK_HISTORY_ID PRIMARY KEY(HISTORY_ID),
CONSTRAINT FK_TYPE_ID_HIS FOREIGN KEY(TYPE_ID) REFERENCES HISTORY_TYPE(TYPE_ID)
);


CREATE TABLE PAYMENT
(
MERCHANT_ID NUMBER(38) CONSTRAINT PAYMENT_MERCHANT_ID_NN NOT NULL,
MERCHANT_BRANCH_ID NUMBER(38) CONSTRAINT PAYMENT_MERCHANT_BRANCH_ID_NN NOT NULL,
USER_ID NUMBER(38) CONSTRAINT PAYMENT_USER_ID_NN NOT NULL,
HISTORY_ID NUMBER(38) CONSTRAINT PAYMENT_HISTORY_ID_NN NOT NULL,

CONSTRAINT PK_PAYMENT PRIMARY KEY(USER_ID,HISTORY_ID),
CONSTRAINT UNQ_PAYMENT UNIQUE(MERCHANT_ID,HISTORY_ID),
CONSTRAINT FK_USER_ID_PAYMENT FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
CONSTRAINT FK_HISTORY_ID_PAYMENT FOREIGN KEY(HISTORY_ID) REFERENCES HISTORY(HISTORY_ID),
CONSTRAINT FK_MERCHANT_ID_PAYMENT FOREIGN KEY(MERCHANT_ID,MERCHANT_BRANCH_ID) REFERENCES MERCHANTS(MERCHANT_ID,MERCHANT_BRANCH_ID)
);


CREATE TABLE CASH_OUT
(
CUSTOMER_ID NUMBER(38) CONSTRAINT C0_CUSTOMER_ID_NN NOT NULL,
AGENT_ID NUMBER(38) CONSTRAINT CO_AGENT_ID_NN NOT NULL,
HISTORY_ID NUMBER(38) CONSTRAINT CO_HISTORY_ID_NN NOT NULL,

CONSTRAINT PK_CASH_OUT PRIMARY KEY (CUSTOMER_ID,HISTORY_ID),
CONSTRAINT UNQ_CASH_OUT UNIQUE(AGENT_ID,HISTORY_ID),
CONSTRAINT FK_CUSTOMER_ID_C_O FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_AGENT_ID_C_O FOREIGN KEY (AGENT_ID) REFERENCES AGENT(AGENT_ID),
CONSTRAINT FK_HISTORY_ID_C_O FOREIGN KEY (HISTORY_ID) REFERENCES HISTORY(HISTORY_ID)
);



CREATE TABLE SEND_MONEY
(
FROM_CUSTOMER_ID NUMBER(38) CONSTRAINT SMFROM_CUSTOMER_ID_NN NOT NULL,
TO_CUSTOMER_ID NUMBER(38) CONSTRAINT SMTO_CUSTOMER_ID_NN NOT NULL,
HISTORY_ID NUMBER(38) CONSTRAINT SM_HISTORY_ID_NN NOT NULL,

CONSTRAINT PK_SEND_MONEY PRIMARY KEY (FROM_CUSTOMER_ID,HISTORY_ID),
CONSTRAINT UNQ_SEND_MONEY UNIQUE(TO_CUSTOMER_ID,HISTORY_ID),
CONSTRAINT FK_FROM_CUSTOMER_ID_S_M FOREIGN KEY (FROM_CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_TO_CUSTOMER_ID_S_M FOREIGN KEY (TO_CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_HISTORY_ID_S_M FOREIGN KEY (HISTORY_ID) REFERENCES HISTORY(HISTORY_ID)
);


CREATE TABLE CASH_IN
(
CUSTOMER_ID NUMBER(38) CONSTRAINT CI_CUSTOMER_ID_NN NOT NULL,
AGENT_ID NUMBER(38) CONSTRAINT CI_AGENT_ID_NN NOT NULL,
HISTORY_ID NUMBER(38) CONSTRAINT CI_HISTORY_ID_NN NOT NULL,

CONSTRAINT PK_CASH_IN PRIMARY KEY(CUSTOMER_ID,HISTORY_ID),
CONSTRAINT UNQ_CASH_IN UNIQUE(AGENT_ID,HISTORY_ID),
CONSTRAINT FK_CUSTOMER_ID_C_I FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_AGENT_ID_C_I FOREIGN KEY (AGENT_ID) REFERENCES AGENT(AGENT_ID),
CONSTRAINT FK_HISTORY_ID_C_I FOREIGN KEY (HISTORY_ID) REFERENCES HISTORY(HISTORY_ID)
);

CREATE TABLE MOBILE_RECHARGE
(
OPERATOR_ID NUMBER(38) CONSTRAINT RECHARGE_OPERATOR_ID_NN NOT NULL,
USER_ID NUMBER(38) CONSTRAINT RECHARGE_USER_ID_NN NOT NULL,
HISTORY_ID NUMBER(38) CONSTRAINT RECHARGE_HISTORY_ID_NN NOT NULL,

CONSTRAINT PK_MOBILE_RECHARGE PRIMARY KEY(USER_ID,HISTORY_ID),
CONSTRAINT UNQ_RECHARGE UNIQUE(OPERATOR_ID,HISTORY_ID),
CONSTRAINT FK_OPERATOR_ID_RECHARGE FOREIGN KEY(OPERATOR_ID) REFERENCES MOBILE_OPERATOR(OPERATOR_ID),
CONSTRAINT FK_USER_ID_RECHARGE FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
CONSTRAINT FK_HISTORY_ID_RECHARGE FOREIGN KEY(HISTORY_ID) REFERENCES HISTORY(HISTORY_ID)
);


CREATE TABLE PAY_UTILITY_BILL
(
SERVICE_ID NUMBER(38) CONSTRAINT PUBILL_SERVICE_ID_NN NOT NULL,
USER_ID NUMBER(38) CONSTRAINT PUBILL_USER_ID_NN NOT NULL,
HISTORY_ID NUMBER(38) CONSTRAINT PUBILL_HISTORY_ID_NN NOT NULL,

CONSTRAINT PK_PAY_UTILITY_BILL PRIMARY KEY(USER_ID,HISTORY_ID),
CONSTRAINT UNQ_PAY_UTILITY_BILL UNIQUE(SERVICE_ID,HISTORY_ID),
CONSTRAINT FK_USER_ID_PAY_U_B FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
CONSTRAINT FK_HISTORY_ID_PAY_U_B FOREIGN KEY(HISTORY_ID) REFERENCES HISTORY(HISTORY_ID),
CONSTRAINT FK_SERVICE_ID_PAY_U_B FOREIGN KEY(SERVICE_ID) REFERENCES UTILITY_SERVICE(SERVICE_ID)
);



--ADDING ADMIN TABLE

CREATE TABLE ADMIN
(
ADMIN_ID NUMBER(38) CONSTRAINT PK_ADMIN PRIMARY KEY,
ADMIN_NAME VARCHAR(255) CONSTRAINT NN_ADMIN_NAME NOT NULL,
ADMIN_PASSWORD VARCHAR(255) CONSTRAINT NN_ADMIN_PASS NOT NULL,
APPROVED_BY NUMBER(38),

CONSTRAINT FK_ADMIN_ID FOREIGN KEY(APPROVED_BY) REFERENCES ADMIN(ADMIN_ID)
);

ALTER TABLE CUSTOMER ADD
(
APPROVED_BY NUMBER(38),
CONSTRAINT FK_CUSTOMER_ADMIN_ID FOREIGN KEY(APPROVED_BY) REFERENCES ADMIN(ADMIN_ID)
);

ALTER TABLE AGENT ADD
(
APPROVED_BY NUMBER(38),
CONSTRAINT FK_AGENT_ADMIN_ID FOREIGN KEY(APPROVED_BY) REFERENCES ADMIN(ADMIN_ID)
);

ALTER TABLE MERCHANTS ADD
(
APPROVED_BY NUMBER(38),
CONSTRAINT FK_MERCHANTS_ADMIN_ID FOREIGN KEY(APPROVED_BY) REFERENCES ADMIN(ADMIN_ID)
);

ALTER TABLE UTILITY_SERVICE ADD
(
SERVICE_TYPE VARCHAR2(255) NOT NULL,
APPROVED_BY NUMBER(38),
CONSTRAINT FK_UTILITY_SERVICE_ADMIN_ID FOREIGN KEY(APPROVED_BY) REFERENCES ADMIN(ADMIN_ID)
);

ALTER TABLE MOBILE_OPERATOR ADD
(
APPROVED_BY NUMBER(38),
CONSTRAINT FK_MOBILE_OPERATOR_ADMIN_ID FOREIGN KEY(APPROVED_BY) REFERENCES ADMIN(ADMIN_ID)
);
